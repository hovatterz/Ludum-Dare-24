#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require "gosu"
$LOAD_PATH << File.expand_path("../../lib", __FILE__)
require "roguevolution"

class GameWindow < Gosu::Window
  FONT_HEIGHT = 16
  TILE_SIZE = 32

  TILES = {
    :player => 0,
    :wall => 1,
    :floor => 2
  }

  def initialize
    super(640, 480, false, 8.333333)
    self.caption = "Roguevolution - Ludum Dare 24 Project"

    @dungeon = Roguevolution::Dungeon.new(5, 50, 50)
    @dungeon.generate!

    @player = Roguevolution::Player.new
    floor = @dungeon.current_floor
    @player.set_position(floor.player_start.x, floor.player_start.y)

    @tiles = Gosu::Image.load_tiles(self, "media/tiles.png", TILE_SIZE, TILE_SIZE, true)
  end

  def draw
    half_width = (width / 2 / TILE_SIZE).round
    half_height = (height / 2 / TILE_SIZE).round
    center = Roguevolution::Point.new(@player.x, @player.y)

    i, j = 0, 0
    ((center.x - half_width)..(center.x + half_width)).each do |x|
      ((center.y - half_height)..(center.y + half_height)).each do |y|
        tile_type = TILES[@dungeon.tile_at(x, y).type] rescue TILES[:wall]
        @tiles[tile_type].draw(i * TILE_SIZE, j * TILE_SIZE, Roguevolution::ZIndex::DUNGEON)
        j += 1
      end
      i += 1
      j = 0
    end

    @tiles[TILES[:player]].draw(half_width * TILE_SIZE, half_height * TILE_SIZE, Roguevolution::ZIndex::PLAYER)
  end

  def update
    if key_group_pressed?([Gosu::KbLeft, Gosu::KbNumpad4, Gosu::KbH])
      @player.move(@dungeon, -1, 0)
    elsif key_group_pressed?([Gosu::KbRight, Gosu::KbNumpad6, Gosu::KbL])
      @player.move(@dungeon, 1, 0)
    elsif key_group_pressed?([Gosu::KbUp, Gosu::KbNumpad8, Gosu::KbK])
      @player.move(@dungeon, 0, -1)
    elsif key_group_pressed?([Gosu::KbDown, Gosu::KbNumpad2, Gosu::KbJ])
      @player.move(@dungeon, 0, 1)
    elsif key_group_pressed?([Gosu::KbNumpad7, Gosu::KbY])
      @player.move(@dungeon, -1, -1)
    elsif key_group_pressed?([Gosu::KbNumpad9, Gosu::KbU])
      @player.move(@dungeon, 1, -1)
    elsif key_group_pressed?([Gosu::KbNumpad1, Gosu::KbB])
      @player.move(@dungeon, -1, 1)
    elsif key_group_pressed?([Gosu::KbNumpad3, Gosu::KbN])
      @player.move(@dungeon, 1, 1)
    end
  end

  private

  def key_group_pressed?(group)
    group.take_while {|id| button_down?(id) }.length > 0
  end
end

window = GameWindow.new
window.show
